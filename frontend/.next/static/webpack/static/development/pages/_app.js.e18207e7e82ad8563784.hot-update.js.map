{"version":3,"file":"static/webpack/static\\development\\pages\\_app.js.e18207e7e82ad8563784.hot-update.js","sources":["webpack:///./pages/_app.js"],"sourcesContent":["//자동으로 이 컴포넌트를 부모컴포넌트로 사용한다. 페이지별 공통된 부분 이걸로 뺐음. 그래야 리랜더링 잡을 수 있음.\r\nimport React from 'react';\r\nimport Head from 'next/head';\r\nimport PropTypes from 'prop-types';\r\nimport withRedux from 'next-redux-wrapper'; //아래 store를 props로 받아야하는 부분을 처리해주기 위해서 설치함.\r\nimport {createStore, compose, applyMiddleware} from 'redux';\r\nimport AppLayout from \"../components/AppLayout\";\r\nimport rootReducer from '../reducers';\r\n\r\n//컴포넌트가 모이는 곳에다가 리액트와 리덕스를  연결시켜주면, 모든 컴포넌트가 리덕스안의 state를 공유하게됨.\r\n//app.js가 가장 root였는데, Provider를 가장 밖에 사용함으로써  root 컴포넌트가 된다. store= state + action + reducer\r\nimport {Provider} from 'react-redux';\r\n\r\nconst NodeBird =({Component, store})=>{\r\n    return (\r\n       <Provider store = {store}>\r\n         <Head>\r\n            <title>노드버드</title>     \r\n            <link rel =\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/antd/3.16.2/antd.css\" />\r\n            <script src =\"https://cdnjs.cloudflare.com/ajax/libs/antd/3.16.2/antd.js\" />\r\n        </Head>   \r\n        <AppLayout>\r\n           <Component />\r\n        </AppLayout>\r\n       </Provider>       \r\n    )\r\n}\r\n\r\nNodeBird.propTypes ={\r\n    Component : PropTypes.elementType,\r\n    store : PropTypes.object,\r\n}\r\n\r\nexport default withRedux((initialState, options)=>{ //이건 외우면 됨. 똑같음.\r\n    //여기는 스토어 커스텀할수있음.\r\n    const middlewares = []; // 리덕스 devtool쓰려면 미들웨어 해주어야함(리덕스에 없는 기능쓰려면), 액션과 스토어사이에서 사용됨.\r\n    const enhancer = compose( //미들웨어 합성\r\n        applyMiddleware(...middlewares),  //위에 미들웨어 뭐적용할지 적고 아래에 그거에 대한거 쓰면됨.\r\n        typeof window !== 'undefined' ? window.__REDUX_DEVTOOLS_EXTENSION__() : (f)=> f, //리덕스 데브툴즈에서 가져옴. 이건그냥 외우면됨.\r\n        ); //typeof window 이부분은 서버쪽에서할때 options.isServer로 할수있음.\r\n\r\n    const store = createStore(rootReducer, initialState,enhancer); //rootReducer 넣어줌.\r\n    return store; //여기서 리턴해주면 위에서 props로 받을 수있음.\r\n})(NodeBird); //HOC, 기능확장해줌."],"mappings":";;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAGA;AACA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AACA;AACA;AACA;AACA;AAFA;AAKA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;AAAA;AAFA;AACA;AAIA;AACA;AAAA;AACA;;;;A","sourceRoot":""}