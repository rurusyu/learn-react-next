{"version":3,"file":"static/webpack/static\\development\\pages\\_app.js.80aba7e6e1290ef2faff.hot-update.js","sources":["webpack:///./reducers/user.js"],"sourcesContent":["//리액트 붙이기 전에 이 구조먼저 다 짜고할 수도 있고, 연결하면서 같이할수도이 있음.\r\n\r\n//초기값을 해주어야함.\r\nconst initialState ={\r\n    isLoggedIn : false,\r\n    user: {},\r\n    signUpData: {},\r\n    loginData: {},\r\n};\r\n\r\n//액션먼저 만들기.\r\nconst SIGN_UP = 'SIGN_UP';\r\nconst SIGN_UP_SUCCESS = 'SIGN_UP_SUCCESS';\r\nexport const LOG_IN = 'LOG_IN'; // 액션의 이름 이걸export 해도되고 밑에 loginAction를 이걸export해도됨\r\nconst LOG_IN_SUCCESS = 'LOG_IN_SUCCESS'; // 액션의 이름\r\nconst LOG_IN_FAILURE = 'LOG_IN_FAILURE'; // 액션의 이름\r\nexport const LOG_OUT = 'LOG_OUT';\r\n\r\n//액션타입은 반드시 지정해야함.\r\nexport const loginAction = {\r\n    type:LOG_IN,\r\n    data:{\r\n        nickname : \"제로초\",\r\n    }\r\n}\r\n//리듀서 \r\nconst reducer = (state = initialState, action) => {\r\n    switch(action.type){\r\n        case LOG_IN :{\r\n            return {\r\n                ...state,\r\n                isLoggedIn : true,\r\n                user : action.data,\r\n            }\r\n        }\r\n        case LOG_OUT :{\r\n            return {\r\n              ...state,\r\n              isLoggedIn:false,\r\n              user: null,\r\n            }\r\n        }\r\n\r\n        case SIGN_UP: {\r\n            return {\r\n              ...state,\r\n              signUpData: action.data,\r\n            };\r\n          }\r\n        default: {\r\n            return {\r\n              ...state,\r\n            }\r\n          }\r\n    }\r\n\r\n}\r\n\r\nexport default reducer;"],"mappings":";;;;;;;;;;;;;;;;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AAJA;AACA;AAOA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAEA;AACA;AACA;AACA;AADA;AACA;AAHA;AACA;AAMA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAEA;AACA;AAHA;AAKA;AACA;AAAA;AAAA;AACA;AAEA;AACA;AAHA;AAKA;AACA;AACA;AAAA;AACA;AAEA;AAFA;AAIA;AACA;AAAA;AAAA;AACA;AAGA;AA1BA;AA6BA;AACA;AACA;;;;A","sourceRoot":""}