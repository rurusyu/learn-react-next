{"ast":null,"code":"import _objectSpread from \"@babel/runtime-corejs2/helpers/esm/objectSpread\";\n//리액트 붙이기 전에 이 구조먼저 다 짜고할 수도 있고, 연결하면서 같이할수도이 있음.\n//초기값을 해주어야함.\nvar initialState = {\n  isLoggedIn: false,\n  user: {}\n}; //액션먼저 만들기.\n\nvar LOG_IN = 'LOG_IN'; //액션이름\n\nvar LOG_OUT = 'LOG_OUT'; //액션타입은 반드시 지정해야함.\n\nvar loginAction = {\n  type: LOG_IN,\n  data: {\n    nickname: \"제로초\"\n  } //리듀서 \n\n};\n\nvar reducer = function reducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case loginAction:\n      {\n        return _objectSpread({}, state, {\n          isLoggedIn: true,\n          user: action.data\n        });\n      }\n\n    case LOG_OUT:\n      {\n        return _objectSpread({}, state, {\n          isLoggedIn: false,\n          user: null\n        });\n      }\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["C:\\Users\\nathan\\Documents\\GitHub\\react-nodebird\\frontend\\reducers\\user.js"],"names":["initialState","isLoggedIn","user","LOG_IN","LOG_OUT","loginAction","type","data","nickname","reducer","state","action"],"mappings":";AAAA;AAEA;AACA,IAAMA,YAAY,GAAE;AAChBC,EAAAA,UAAU,EAAG,KADG;AAEhBC,EAAAA,IAAI,EAAE;AAFU,CAApB,C,CAKA;;AACA,IAAMC,MAAM,GAAG,QAAf,C,CAAyB;;AACzB,IAAMC,OAAO,GAAG,SAAhB,C,CAEA;;AACA,IAAMC,WAAW,GAAG;AAChBC,EAAAA,IAAI,EAACH,MADW;AAEhBI,EAAAA,IAAI,EAAC;AACDC,IAAAA,QAAQ,EAAG;AADV,GAFW,CAMpB;;AANoB,CAApB;;AAOA,IAAMC,OAAO,GAAG,SAAVA,OAAU,GAAkC;AAAA,MAAjCC,KAAiC,uEAAzBV,YAAyB;AAAA,MAAXW,MAAW;;AAC9C,UAAOA,MAAM,CAACL,IAAd;AACI,SAAKD,WAAL;AAAkB;AACd,iCACOK,KADP;AAEIT,UAAAA,UAAU,EAAG,IAFjB;AAGIC,UAAAA,IAAI,EAAGS,MAAM,CAACJ;AAHlB;AAKH;;AACD,SAAKH,OAAL;AAAc;AACV,iCACKM,KADL;AAEET,UAAAA,UAAU,EAAC,KAFb;AAGEC,UAAAA,IAAI,EAAE;AAHR;AAKH;AAdL;AAiBH,CAlBD;;AAoBA,eAAeO,OAAf","sourcesContent":["//리액트 붙이기 전에 이 구조먼저 다 짜고할 수도 있고, 연결하면서 같이할수도이 있음.\r\n\r\n//초기값을 해주어야함.\r\nconst initialState ={\r\n    isLoggedIn : false,\r\n    user: {},\r\n};\r\n\r\n//액션먼저 만들기.\r\nconst LOG_IN = 'LOG_IN'; //액션이름\r\nconst LOG_OUT = 'LOG_OUT';\r\n\r\n//액션타입은 반드시 지정해야함.\r\nconst loginAction = {\r\n    type:LOG_IN,\r\n    data:{\r\n        nickname : \"제로초\",\r\n    }\r\n}\r\n//리듀서 \r\nconst reducer = (state = initialState, action) => {\r\n    switch(action.type){\r\n        case loginAction :{\r\n            return {\r\n                ...state,\r\n                isLoggedIn : true,\r\n                user : action.data,\r\n            }\r\n        }\r\n        case LOG_OUT :{\r\n            return {\r\n              ...state,\r\n              isLoggedIn:false,\r\n              user: null,\r\n            }\r\n        }\r\n    }\r\n\r\n}\r\n\r\nexport default reducer;"]},"metadata":{},"sourceType":"module"}