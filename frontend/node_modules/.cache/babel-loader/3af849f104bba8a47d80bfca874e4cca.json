{"ast":null,"code":"import _objectSpread from \"@babel/runtime-corejs2/helpers/esm/objectSpread\";\nvar initialState = {\n  mainPosts: []\n};\nvar ADD_POST = 'ADD_POST';\nvar ADD_DUMMY = 'ADD_DUMMY';\nvar addPost = {\n  type: ADD_POST\n};\nvar addDummy = {\n  type: ADD_DUMMY,\n  data: {\n    content: 'Hello',\n    UserId: 1,\n    User: {\n      nickname: '제로초'\n    }\n  }\n};\n\nvar reducer = function reducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case ADD_POST:\n      {\n        return _objectSpread({}, state);\n      }\n\n    case ADD_DUMMY:\n      {\n        return _objectSpread({}, state);\n      }\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["C:\\Users\\nathan\\Documents\\GitHub\\react-nodebird\\frontend\\reducers\\post.js"],"names":["initialState","mainPosts","ADD_POST","ADD_DUMMY","addPost","type","addDummy","data","content","UserId","User","nickname","reducer","state","action"],"mappings":";AAAA,IAAMA,YAAY,GAAE;AAChBC,EAAAA,SAAS,EAAG;AADI,CAApB;AAIA,IAAMC,QAAQ,GAAE,UAAhB;AACA,IAAMC,SAAS,GAAE,WAAjB;AAEA,IAAMC,OAAO,GAAE;AACXC,EAAAA,IAAI,EAAEH;AADK,CAAf;AAIA,IAAMI,QAAQ,GAAE;AACZD,EAAAA,IAAI,EAAGF,SADK;AAEZI,EAAAA,IAAI,EAAC;AACDC,IAAAA,OAAO,EAAG,OADT;AAEDC,IAAAA,MAAM,EAAG,CAFR;AAGDC,IAAAA,IAAI,EAAG;AACHC,MAAAA,QAAQ,EAAG;AADR;AAHN;AAFO,CAAhB;;AAWA,IAAMC,OAAO,GAAG,SAAVA,OAAU,GAAkC;AAAA,MAAjCC,KAAiC,uEAAzBb,YAAyB;AAAA,MAAXc,MAAW;;AAC9C,UAAOA,MAAM,CAACT,IAAd;AACI,SAAKH,QAAL;AAAgB;AACZ,iCACOW,KADP;AAGH;;AACD,SAAKV,SAAL;AAAiB;AACb,iCACOU,KADP;AAGH;AAVL;AAYH,CAbD;;AAeA,eAAeD,OAAf","sourcesContent":["const initialState ={\r\n    mainPosts : [],\r\n}\r\n\r\nconst ADD_POST ='ADD_POST';\r\nconst ADD_DUMMY ='ADD_DUMMY';\r\n\r\nconst addPost ={\r\n    type :ADD_POST,    \r\n}\r\n\r\nconst addDummy ={\r\n    type : ADD_DUMMY,\r\n    data:{\r\n        content : 'Hello',\r\n        UserId : 1,\r\n        User : {\r\n            nickname : '제로초',\r\n        },\r\n    },\r\n};\r\n\r\nconst reducer = (state = initialState, action) => {\r\n    switch(action.type){\r\n        case ADD_POST : {\r\n            return {\r\n                ...state,  \r\n            };\r\n        }\r\n        case ADD_DUMMY : {\r\n            return {\r\n                ...state,\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nexport default reducer;"]},"metadata":{},"sourceType":"module"}