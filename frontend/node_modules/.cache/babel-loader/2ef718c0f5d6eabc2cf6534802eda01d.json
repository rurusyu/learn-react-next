{"ast":null,"code":"import _objectSpread from \"@babel/runtime-corejs2/helpers/esm/objectSpread\";\n//리액트 붙이기 전에 이 구조먼저 다 짜고할 수도 있고, 연결하면서 같이할수도이 있음.\n//초기값을 해주어야함.\nvar initialState = {\n  isLoggedIn: false,\n  user: {},\n  signUpData: {},\n  loginData: {}\n}; //액션먼저 만들기.\n\nvar SIGN_UP = 'SIGN_UP';\nvar SIGN_UP_SUCCESS = 'SIGN_UP_SUCCESS';\nexport var LOG_IN = 'LOG_IN'; // 액션의 이름\n\nvar LOG_IN_SUCCESS = 'LOG_IN_SUCCESS'; // 액션의 이름\n\nvar LOG_IN_FAILURE = 'LOG_IN_FAILURE'; // 액션의 이름\n\nexport var LOG_OUT = 'LOG_OUT'; //액션타입은 반드시 지정해야함.\n\nvar loginAction = {\n  type: LOG_IN,\n  data: {\n    nickname: \"제로초\"\n  } //리듀서 \n\n};\n\nvar reducer = function reducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case LOG_IN:\n      {\n        return _objectSpread({}, state, {\n          isLoggedIn: true,\n          user: action.data\n        });\n      }\n\n    case LOG_OUT:\n      {\n        return _objectSpread({}, state, {\n          isLoggedIn: false,\n          user: null\n        });\n      }\n\n    case SIGN_UP:\n      {\n        return _objectSpread({}, state, {\n          signUpData: action.data\n        });\n      }\n\n    default:\n      {\n        return _objectSpread({}, state);\n      }\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["C:\\Users\\nathan\\Documents\\GitHub\\react-nodebird\\frontend\\reducers\\user.js"],"names":["initialState","isLoggedIn","user","signUpData","loginData","SIGN_UP","SIGN_UP_SUCCESS","LOG_IN","LOG_IN_SUCCESS","LOG_IN_FAILURE","LOG_OUT","loginAction","type","data","nickname","reducer","state","action"],"mappings":";AAAA;AAEA;AACA,IAAMA,YAAY,GAAE;AAChBC,EAAAA,UAAU,EAAG,KADG;AAEhBC,EAAAA,IAAI,EAAE,EAFU;AAGhBC,EAAAA,UAAU,EAAE,EAHI;AAIhBC,EAAAA,SAAS,EAAE;AAJK,CAApB,C,CAOA;;AACA,IAAMC,OAAO,GAAG,SAAhB;AACA,IAAMC,eAAe,GAAG,iBAAxB;AACA,OAAO,IAAMC,MAAM,GAAG,QAAf,C,CAAyB;;AAChC,IAAMC,cAAc,GAAG,gBAAvB,C,CAAyC;;AACzC,IAAMC,cAAc,GAAG,gBAAvB,C,CAAyC;;AACzC,OAAO,IAAMC,OAAO,GAAG,SAAhB,C,CAEP;;AACA,IAAMC,WAAW,GAAG;AAChBC,EAAAA,IAAI,EAACL,MADW;AAEhBM,EAAAA,IAAI,EAAC;AACDC,IAAAA,QAAQ,EAAG;AADV,GAFW,CAMpB;;AANoB,CAApB;;AAOA,IAAMC,OAAO,GAAG,SAAVA,OAAU,GAAkC;AAAA,MAAjCC,KAAiC,uEAAzBhB,YAAyB;AAAA,MAAXiB,MAAW;;AAC9C,UAAOA,MAAM,CAACL,IAAd;AACI,SAAKL,MAAL;AAAa;AACT,iCACOS,KADP;AAEIf,UAAAA,UAAU,EAAG,IAFjB;AAGIC,UAAAA,IAAI,EAAGe,MAAM,CAACJ;AAHlB;AAKH;;AACD,SAAKH,OAAL;AAAc;AACV,iCACKM,KADL;AAEEf,UAAAA,UAAU,EAAC,KAFb;AAGEC,UAAAA,IAAI,EAAE;AAHR;AAKH;;AAED,SAAKG,OAAL;AAAc;AACV,iCACKW,KADL;AAEEb,UAAAA,UAAU,EAAEc,MAAM,CAACJ;AAFrB;AAID;;AACH;AAAS;AACL,iCACKG,KADL;AAGD;AA1BP;AA6BH,CA9BD;;AAgCA,eAAeD,OAAf","sourcesContent":["//리액트 붙이기 전에 이 구조먼저 다 짜고할 수도 있고, 연결하면서 같이할수도이 있음.\r\n\r\n//초기값을 해주어야함.\r\nconst initialState ={\r\n    isLoggedIn : false,\r\n    user: {},\r\n    signUpData: {},\r\n    loginData: {},\r\n};\r\n\r\n//액션먼저 만들기.\r\nconst SIGN_UP = 'SIGN_UP';\r\nconst SIGN_UP_SUCCESS = 'SIGN_UP_SUCCESS';\r\nexport const LOG_IN = 'LOG_IN'; // 액션의 이름\r\nconst LOG_IN_SUCCESS = 'LOG_IN_SUCCESS'; // 액션의 이름\r\nconst LOG_IN_FAILURE = 'LOG_IN_FAILURE'; // 액션의 이름\r\nexport const LOG_OUT = 'LOG_OUT';\r\n\r\n//액션타입은 반드시 지정해야함.\r\nconst loginAction = {\r\n    type:LOG_IN,\r\n    data:{\r\n        nickname : \"제로초\",\r\n    }\r\n}\r\n//리듀서 \r\nconst reducer = (state = initialState, action) => {\r\n    switch(action.type){\r\n        case LOG_IN :{\r\n            return {\r\n                ...state,\r\n                isLoggedIn : true,\r\n                user : action.data,\r\n            }\r\n        }\r\n        case LOG_OUT :{\r\n            return {\r\n              ...state,\r\n              isLoggedIn:false,\r\n              user: null,\r\n            }\r\n        }\r\n\r\n        case SIGN_UP: {\r\n            return {\r\n              ...state,\r\n              signUpData: action.data,\r\n            };\r\n          }\r\n        default: {\r\n            return {\r\n              ...state,\r\n            }\r\n          }\r\n    }\r\n\r\n}\r\n\r\nexport default reducer;"]},"metadata":{},"sourceType":"module"}